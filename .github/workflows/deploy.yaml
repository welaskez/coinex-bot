name: Deploy

on:
  workflow_dispatch:

env:
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  GIT_SHA: ${{ github.sha }}
  BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
  DB_URL: ${{ secrets.DB_URL }}
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}
  RMQ__URL: ${{ secrets.RMQ__URL }}
  COINEX__API_KEY: ${{ secrets.COINEX__API_KEY }}
  CHANNEL_ID: ${{ secrets.CHANNEL_ID }}

jobs:
  build:
    runs-on: [ main ]
    strategy:
      matrix:
        include:
          - name: bot
            context: ./bot
            target: .
            service: bot
            cache_scope: bot-cache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: false
          load: true
          target: ${{ matrix.target }}
          tags: ${{ matrix.service }}:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/solid-technologies/${{ matrix.service }}:cache
          cache-to: type=registry,ref=ghcr.io/solid-technologies/${{ matrix.service }}:cache,mode=max,compression=zstd

  deploy:
    runs-on: [ main ]
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Env File
        run: |
          touch .env
          echo POSTGRES_USER=${{ env.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_DB=${{ env.POSTGRES_DB }} >> .env
          echo BOT_CONFIG__BOT_TOKEN=${{ env.BOT_TOKEN }} >> .env
          echo BOT_CONFIG__DB__URL=${{ env.DB_URL }} >> .env 
          echo BOT_CONFIG__REDIS__HOST=${{ env.REDIS_HOST }} >> .env 
          echo BOT_CONFIG__REDIS__PORT=${{ env.REDIS_PORT }} >> .env 
          echo BOT_CONFIG__RMQ__URL=${{ env.RMQ__URL }} >> .env 
          echo BOT_CONFIG__COINEX__API_KEY=${{ env.COINEX__API_KEY }} >> .env 
          echo BOT_CONFIG__CHANNEL_ID=${{ env.CHANNEL_ID }} >> .env 

      - name: deploy
        run: docker compose up --build -d

      - name: Remove unused Images
        run: docker system prune -f
